{"version":3,"sources":["components/Ingredient.js","components/IngredientList.js","components/Recipe.js","components/RecipeList.js","components/RecipeIngredientEdit.js","components/RecipeEdit.js","components/App.js","index.js"],"names":["Ingredient","name","amount","IngredientList","ingredientElements","ingredients","map","ingredient","id","className","Recipe","props","cookTime","instructions","servings","useContext","RecipeContext","handleRecipeDelete","handleRecipeSelect","onClick","RecipeList","recipes","handleRecipeAdd","recipe","RecipeIngredientEdit","handleIngredientChange","handleIngredientDelete","handleChange","changes","type","value","onChange","e","target","RecipeEdit","handleRecipeChange","newIngredients","index","findIndex","i","filter","undefined","htmlFor","min","parseInt","newIngredient","uuidv4","handleIngredientAdd","React","createContext","LOCAL_STORAGE_KEY","sampleRecipes","App","useState","setRecipes","selectedRecipeId","setSelectedRecipeId","selectedRecipe","find","useEffect","recipeJSON","localStorage","getItem","JSON","parse","setItem","stringify","recipeContextValue","newRecipe","newRecipes","r","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2309c2a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Ingredient({ name, amount }) {\r\n  return (\r\n    <>\r\n      <span>{name}</span>\r\n      <span>{amount}</span>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n/* COMPONENTS */\r\nimport Ingredient from \"./Ingredient\";\r\n\r\nexport default function IngredientList({ ingredients }) {\r\n  const ingredientElements = ingredients.map((ingredient) => {\r\n    return <Ingredient key={ingredient.id} {...ingredient} />;\r\n  });\r\n\r\n  return <div className=\"ingredient-grid\">{ingredientElements}</div>;\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\n/* COMPONENTS */\r\nimport IngredientList from \"./IngredientList\";\r\n\r\n/* IMPORTING CONTEXT */\r\nimport { RecipeContext } from \"./App\";\r\n\r\nexport default function Recipe(props) {\r\n  const { id, name, cookTime, instructions, servings, ingredients } = props;\r\n\r\n  /* GETTING VALUE FROM CONTEXT */\r\n  const { handleRecipeDelete, handleRecipeSelect } = useContext(RecipeContext);\r\n\r\n  return (\r\n    <div className=\"recipe\">\r\n      <div className=\"recipe__header\">\r\n        <h3 className=\"recipe__title\">{name}</h3>\r\n        <div>\r\n          <button\r\n            className=\"btn btn--primary mr-1\"\r\n            onClick={() => handleRecipeSelect(id)}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            className=\"btn btn--danger\"\r\n            onClick={() => handleRecipeDelete(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"recipe__row\">\r\n        <span className=\"recipe__label\">Cook Time:</span>\r\n        <span className=\"recipe__value\">{cookTime}</span>\r\n      </div>\r\n      <div className=\"recipe__row\">\r\n        <span className=\"recipe__label\">Servings:</span>\r\n        <span className=\"recipe__value\">{servings}</span>\r\n      </div>\r\n      <div className=\"recipe__row\">\r\n        <span className=\"recipe__label\">Instructions:</span>\r\n        <div className=\"recipe__value recipe__instructions recipe__value--indented\">\r\n          {instructions}\r\n        </div>\r\n      </div>\r\n      <div className=\"recipe__row\">\r\n        <span className=\"recipe__label\">Ingredients:</span>\r\n        <div className=\"recipe__value recipe__value--indented\">\r\n          <IngredientList ingredients={ingredients} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\n/* COMPONENTS */\r\nimport Recipe from \"./Recipe\";\r\n\r\n/* IMPORTING CONTEXT */\r\nimport { RecipeContext } from \"./App\";\r\n\r\nexport default function RecipeList({ recipes }) {\r\n  /* GETTING VALUE FROM CONTEXT */\r\n  const { handleRecipeAdd } = useContext(RecipeContext);\r\n\r\n  return (\r\n    <div className=\"recipe-list\">\r\n      <div>\r\n        {recipes.map((recipe) => {\r\n          return <Recipe key={recipe.id} {...recipe} />;\r\n        })}\r\n      </div>\r\n      <div className=\"recipe-list__add-recipe-btn-container\">\r\n        <button className=\"btn btn--primary\" onClick={handleRecipeAdd}>\r\n          Add Recipe\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function RecipeIngredientEdit(props) {\r\n  const { ingredient, handleIngredientChange, handleIngredientDelete } = props;\r\n\r\n  function handleChange(changes) {\r\n    // INSTEAD OF OVERRIDING OUR CURRENT OBJECT, IT IS CREATING AN ENTIRELY NEW OBJECT\r\n    handleIngredientChange(ingredient.id, { ...ingredient, ...changes });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        className=\"recipe-edit__input\"\r\n        value={ingredient.name}\r\n        onChange={(e) => handleChange({ name: e.target.value })}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        className=\"recipe-edit__input\"\r\n        value={ingredient.amount}\r\n        onChange={(e) => handleChange({ amount: e.target.value })}\r\n      />\r\n      <button\r\n        className=\"btn btn--danger\"\r\n        onClick={() => handleIngredientDelete(ingredient.id)}\r\n      >\r\n        &times;\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\n/* RANDOM ID */\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n/* COMPONENTS */\r\nimport RecipeIngredientEdit from \"./RecipeIngredientEdit\";\r\n\r\n/* IMPORTING CONTEXT */\r\nimport { RecipeContext } from \"./App\";\r\n\r\nexport default function RecipeEdit({ recipe }) {\r\n  /* GETTING VALUE FROM CONTEXT */\r\n  const { handleRecipeChange, handleRecipeSelect } = useContext(RecipeContext);\r\n\r\n  function handleChange(changes) {\r\n    // INSTEAD OF OVERRIDING OUR CURRENT OBJECT, IT IS CREATING AN ENTIRELY NEW OBJECT\r\n    handleRecipeChange(recipe.id, { ...recipe, ...changes });\r\n  }\r\n\r\n  function handleIngredientChange(id, ingredient) {\r\n    const newIngredients = [...recipe.ingredients];\r\n    const index = newIngredients.findIndex((i) => i.id === id);\r\n    newIngredients[index] = ingredient;\r\n    handleChange({ ingredients: newIngredients });\r\n  }\r\n\r\n  /* HANDLE INGREDIENT ADD BUTTON */\r\n  function handleIngredientAdd() {\r\n    const newIngredient = {\r\n      id: uuidv4(),\r\n      name: \"\",\r\n      amount: \"\",\r\n    };\r\n    handleChange({ ingredients: [...recipe.ingredients, newIngredient] });\r\n  }\r\n\r\n  /* HANDLE INGREDIENT DELETE BUTTON */\r\n  function handleIngredientDelete(id) {\r\n    handleChange({\r\n      ingredients: recipe.ingredients.filter((i) => i.id !== id),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"recipe-edit\">\r\n      <div className=\"recipe-edit__remove-button-container\">\r\n        <button\r\n          className=\"btn recipe-edit__remove-button\"\r\n          onClick={() => handleRecipeSelect(undefined)}\r\n        >\r\n          &times;\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"recipe-edit__details-grid\">\r\n        <label htmlFor=\"name\" className=\"recipe-edit__label\">\r\n          Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          className=\"recipe-edit__input\"\r\n          value={recipe.name}\r\n          onChange={(e) => handleChange({ name: e.target.value })}\r\n        />\r\n\r\n        <label htmlFor=\"cookTime\" className=\"recipe-edit__label\">\r\n          Cook Time\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"cookTime\"\r\n          id=\"cookTime\"\r\n          className=\"recipe-edit__input\"\r\n          value={recipe.cookTime}\r\n          onChange={(e) => handleChange({ cookTime: e.target.value })}\r\n        />\r\n\r\n        <label htmlFor=\"servings\" className=\"recipe-edit__label\">\r\n          Servings\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"servings\"\r\n          min=\"1\"\r\n          id=\"servings\"\r\n          className=\"recipe-edit__input\"\r\n          value={recipe.servings}\r\n          onChange={(e) =>\r\n            handleChange({ servings: parseInt(e.target.value) || \"\" })\r\n          }\r\n        />\r\n\r\n        <label htmlFor=\"instructions\" className=\"recipe-edit__label\">\r\n          Instructions\r\n        </label>\r\n        <textarea\r\n          name=\"instructions\"\r\n          id=\"instructions\"\r\n          className=\"recipe-edit__input\"\r\n          value={recipe.instructions}\r\n          onChange={(e) => handleChange({ instructions: e.target.value })}\r\n        />\r\n      </div>\r\n      <br />\r\n      <label className=\"recipe-edit__label\">Ingredients</label>\r\n      <div className=\"recipe-edit__ingredient-grid\">\r\n        <div>Name</div>\r\n        <div>Amount</div>\r\n        <div></div>\r\n        {recipe.ingredients.map((ingredient) => {\r\n          return (\r\n            <RecipeIngredientEdit\r\n              key={ingredient.id}\r\n              ingredient={ingredient}\r\n              handleIngredientChange={handleIngredientChange}\r\n              handleIngredientDelete={handleIngredientDelete}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"recipe-edit__add-ingredient-btn-container\">\r\n        <button\r\n          className=\"btn btn--primary\"\r\n          onClick={() => handleIngredientAdd()}\r\n        >\r\n          Add Ingredients\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\n\n/* RANDOM ID */\nimport { v4 as uuidv4 } from \"uuid\";\n\n/* COMPONENTS */\nimport RecipeList from \"./RecipeList\";\nimport RecipeEdit from \"./RecipeEdit\";\n\n/* STYLING */\nimport \"../css/app.css\";\n\n/* CREATING CONTEXT */\nexport const RecipeContext = React.createContext();\n\n/* CREATING KEY FOR LOCAL STORAGE */\nconst LOCAL_STORAGE_KEY = \"cookingWithReact.recipes\";\n\nfunction App() {\n  const [recipes, setRecipes] = useState(sampleRecipes);\n  const [selectedRecipeId, setSelectedRecipeId] = useState();\n\n  const selectedRecipe = recipes.find(\n    (recipe) => recipe.id === selectedRecipeId\n  );\n\n  /* GETTING DATA FROM LOCAL STORAGE */\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY);\n\n    if (recipeJSON != null) {\n      setRecipes(JSON.parse(recipeJSON));\n    }\n  }, []);\n\n  /* SETTING DATA TO LOCAL STORAGE */\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  }, [recipes]);\n\n  /* CREATING VALUE TO PASS TO CONTEXT */\n  const recipeContextValue = {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange,\n  };\n\n  /* FUNCTION TO HANDLE CHANGE IN RECIPE */\n  function handleRecipeChange(id, recipe) {\n    // (id of recipe we want to change, new recipe)\n\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex((r) => r.id === id);\n\n    // SWAPPING SELECTED RECIPE FROM ORIGINAL ARRAY OF RECIPES\n    newRecipes[index] = recipe;\n\n    setRecipes(newRecipes);\n  }\n\n  /* FUNCTION TO HANDLE EDIT BUTTON */\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id);\n  }\n\n  /* FUNCTION TO HANDLE ADD RECIPE BUTTON */\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: uuidv4(),\n      name: \"\",\n      servings: 1,\n      cookTime: \"\",\n      instructions: \"\",\n      ingredients: [\n        {\n          id: uuidv4(),\n          name: \"\",\n          amount: \"\",\n        },\n      ],\n    };\n\n    // TO MAKE THE RIGHT SIDE OF SCREEN VISIBLE WHEN ADD RECIPE IS CLICKED\n    setSelectedRecipeId(newRecipe.id);\n\n    // ADDING NEW RECIPE TO EXISTING LIST OF RECIPES\n    setRecipes([...recipes, newRecipe]);\n  }\n\n  /* FUNCTION TO HANDLE DELETE BUTTON */\n\n  function handleRecipeDelete(id) {\n    // CLEAR OUT setSelectedRecipeId WHEN WE DON'T HAVE A RECIPE THAT CORRESPONDS WITH THAT ID\n    if (setSelectedRecipeId != null && setSelectedRecipeId === id) {\n      setSelectedRecipeId(undefined);\n    }\n\n    setRecipes(recipes.filter((recipe) => recipe.id !== id));\n  }\n\n  return (\n    <RecipeContext.Provider value={recipeContextValue}>\n      <RecipeList recipes={recipes} />\n\n      {selectedRecipe && <RecipeEdit recipe={selectedRecipe} />}\n    </RecipeContext.Provider>\n  );\n}\n\nconst sampleRecipes = [\n  {\n    id: 1,\n    name: \"Plain Chicken\",\n    servings: 3,\n    cookTime: \"1:45\",\n    instructions:\n      \"1. Put salt on chicken\\n2. Put chicken in oven\\n3. Eat Chicken\",\n    ingredients: [\n      {\n        id: 1,\n        name: \"Chicken\",\n        amount: \"2 Pounds\",\n      },\n      {\n        id: 2,\n        name: \"Salt\",\n        amount: \"1 Tbs\",\n      },\n    ],\n  },\n  {\n    id: 2,\n    name: \"Plain Pork\",\n    servings: 5,\n    cookTime: \"0:45\",\n    instructions: \"1. Put paprika on pork\\n2. Put pork in oven\\n3. Eat pork\",\n    ingredients: [\n      {\n        id: 1,\n        name: \"Pork\",\n        amount: \"3 Pounds\",\n      },\n      {\n        id: 2,\n        name: \"Paprika\",\n        amount: \"2 Tbs\",\n      },\n    ],\n  },\n];\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n/* COMPONENTS */\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}